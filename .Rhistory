f1 <- function(x) (40 - x)/-4
f2 <- function(x) (22-x) / -2
f3 <- function(x) (23 - 2*x) / -1
f4 <- function(x) (50 - 5*x) / -1
curve(f1)
curve(f2)
curve(f3)
plot(xlim=c(-40, 40), ylim=c(-40, 40))
plot(1, xlim=c(-40, 40), ylim=c(-40, 40))
curve(f1)
plot(1, xlim=c(-40, 40), ylim=c(-40, 40))
curve(f1, add = T)
add(f2, add = T)
curve(f2, add = T)
curve(f3, add = T)
curve(f4, add = T)
plot(1, xlim=c(0, 20), ylim=c(-20, 20))
curve(f1, add = T)
curve(f2, add = T)
curve(f3, add = T)
curve(f4, add = T)
plot(1, xlim=c(5, 15), ylim=c(-20, 0))
curve(f1, add = T)
curve(f2, add = T)
curve(f3, add = T)
curve(f4, add = T)
curve?
?curve
?curve
plot(1, xlim=c(5, 15), ylim=c(-20, 0))
curve(f1, add = T, col = 'orange')
curve(f1, add = T, col = 'blue')
curve(f1, add = T, col = 'orange')
curve(f2, add = T, col = 'blue')
curve(f3, add = T, col = 'green')
curve(f4, add = T)
plot(1, xlim=c(0, 20), ylim=c(-20, 0))
curve(f1, add = T, col = 'orange')
curve(f2, add = T, col = 'blue')
curve(f3, add = T, col = 'green')
curve(f4, add = T)
obj <- function(z1, z2) -3*z1 + z2
obj(4, -9)
obj(8, -7)
onj(9, -5)
obj(9, -5)
example(sample)
plot?
()
?plot
?read.table
x <- c(1,2,3,4)
x
typeof(x)
class(x)
View(x)
x[[1]]
x[1]
setwd('~/Documents/Stanford/')
mat <- matrix(rnorm(100))
head(mat)
df <- data.frame(mat)
head(df)
View(df)
View(mat)
mat <- matrix(rnorm(100), nrow = 20)
df <- data.frame(mat)
View(mat)
View(df)
typeof(mat)
typeof(df)
names(mat)
names(df)
class(mat)
class(df)
df$X1
df[1, ]
mat[1, ]
class(df[1, ])
class(mat[1, ])
typeof(df[1, ])
typeof(mat[1, ])
sapply(df[1, ], sum)
sapply(mat[1, ], sum)
?apply
sapply(df[, 1], sum)
sapply(mat[, 1], sum)
apply(mat, 1, sum)
e <- new.env()
typeof(e)
class(e)
x
mat
mat[1]
mat[[1]]
mat[[15]]
mat[15]
typeof(mat[[15]])
typeof(mat[15])
class(mat[15])
df[15]
mat[18]
df[[15]]
typeof(mat)
typeof(df)
typeof(df$X1)
class(df$X1)
class(df)
class(mat)
tyeof(mat)
typeof(mat)
typeof(df)
?sample
??sample
?sample
colMeans(mat)
colMeans(df)
?colMeans
sets <- read.table('Entrez_With_Subset_Defs.txt', head = T)
sets <- read.delim('Entrez_With_Subset_Defs.txt')
View(sets)
head(sets)
typeof(sets)
class(sets)
apply(sets, 2, class)
x
x * 4
x
4*x
getRandStr <- function(length = 8)
{
return(paste(sample(c(0:9, letters, LETTERS),
length, replace=TRUE), collapse=""))
}
# Create two random matrices of equal size
totalRows <- 8000
# Number of rows to keep in subset
subsetRows <- 7000
mat1 <- matrix(rnorm(totalRows*2), ncol = 2)
mat2 <- matrix(rnorm(totalRows*2), ncol = 2)
randRownames <- replicate(totalRows, getRandStr())
rownames(mat1) <- randRownames
rownames(mat2) <- randRownames
View(mat1)
View(mat2)
# Keep only a subset of each (NOT the same subset)
mat1 <- mat1[sample(nrow(mat1), subsetRows), ]
mat2 <- mat2[sample(nrow(mat2), subsetRows), ]
df1 <- data.frame(mat1)
df2 <- data.frame(mat2)
setwd('~/Documents/Programming/R-Examples/')
list.files()
source('~/Documents/Programming/R-Examples/mergeTest.R')
slowMerging()
